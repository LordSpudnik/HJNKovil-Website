@page "/vwdonationList"
@page "/vwdonationlist/{pDonatedById:int}"

@inject HJNKoyil.Controllers.vwDonationController svcDonation
@inject NavigationManager oNavManager

<h2> List </h2>

<div class="row searchactionrow">
    <div class="col-md-6">
        <div class="input-group">
            <input type="hidden" name="search_param" value="all" id="search_param">
            <input type="text" class="form-control" name="x" placeholder="Enter ID..." @bind="searchID">
            <span class="input-group-btn">
                <button class="btn btn-default" @onclick='Search' type="button"><span class="fas fa-search"></span>Search ...</button>
                @*@if (filterOn)
                {
                <button type="button" class="btn btn-link" @onclick='ClearFilter'>Clear Filter</button>
                }*@
            </span>
        </div>
    </div>
</div>

<p>
    <button class="nav-item" @onclick="()=>Create(0)"> Create  </button>
</p>
<table>
    <tr>
        <th></th>
        <th>
            Id
        </th>
        <th>
            DonatedBy
        </th>
        <th>
            Donated By Name
        </th>
        <th>
            DonationType
        </th>
        <th>
            DonationTypeDesc
        </th>
        <th>
            AmountDonated
        </th>
        <th>
            ReferenceInfo
        </th>
        <th>
            DonatedDate
        </th>
        <th>
            Comments
        </th>
        <th>
            IsActive
        </th>
        <th>
            CollectedBy
        </th>
        <th>
            CollectedByName
        </th>
        <th>
            CreatedBy
        </th>
        <th>
            CreatedDate
        </th>
        <th>
            ModifiedBy
        </th>
        <th>
            ModifiedDate
        </th>
    </tr>

    @foreach (var oItem in oModel)
    {
        <tr>
            <td>
                <button @onclick="()=>Create(oItem.Id)">Edit</button>
            </td>
            <td>
                @oItem.Id
            </td>
            <td>
                @oItem.DonatedBy
            </td>
            <td>
                @oItem.DonatedByName
            </td>
            <td>
                @oItem.DonationType
            </td>
            <td>
                @oItem.DonationTypeDesc
            </td>
            <td>
                @oItem.AmountDonated
            </td>
            <td>
                @oItem.ReferenceInfo
            </td>
            <td>
                @oItem.DonatedDate
            </td>
            <td>
                @oItem.Comments
            </td>
            <td>
                @oItem.IsActive
            </td>
            <td>
                @oItem.CollectedBy
            </td>
            <td>
                @oItem.CollectedByName
            </td>
            <td>
                @oItem.CreatedBy
            </td>
            <td>
                @oItem.CreatedDate
            </td>
            <td>
                @oItem.ModifiedBy
            </td>
            <td>
                @oItem.ModifiedDate
            </td>
        </tr>
    }
</table>



@code
{
    [Parameter]
    public int pDonatedById { get; set; }
    List<HJNKoyil.Models.VwDonation> oModel;

    private bool sortDirection = false;
    private int sortIndex = 0;
    private string spinnerbgImage = "img/spinner.gif";
    private bool spinning = true;
    private int searchID = 0;
    private bool filterOn = false;
    private int filteredRecordCount = 0;
    private string searchMessage = "";

    private void Create(int vId)
    {
        //put your code here
        oNavManager.NavigateTo("/CreateDonation/" + vId.ToString());
    }

    protected override async Task OnInitializedAsync()
    {

        oModel = new List<Models.VwDonation>();

        // if (pDonatedById != 0)
        // {
        //     oModel = svcDonation.ListDonatedBy(pDonatedById).ToList();
        // }
        // else
        //     oModel = svcDonation.List().ToList();
    }

    protected async Task Search()
    {
        if (searchID == 0)
        {
            //set search var
            filterOn = false;
            filteredRecordCount = 0;
            searchMessage = "";
        }
        else
        {
            try
            {
                oModel = svcDonation.ListDonatedBy(searchID, 1, 20).ToList();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Catching Error\n");
                Console.Write(ex.InnerException);
                Console.Write(ex.Source);
                Console.WriteLine(ex.Message);
            }
        }
    }
}
