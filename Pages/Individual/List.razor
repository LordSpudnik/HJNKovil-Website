@page "/IndividualList"
@inject HJNKoyil.Controllers.IndividualController svcIndividual
@inject NavigationManager oNavManager

<h2>List of Individuals </h2>
<div class="row searchactionrow">
    <div class="col-md-6">
        <div class="input-group">
            <input type="hidden" name="search_param" value="all" id="search_param">
            <input type="text" class="form-control" name="x" placeholder="Search term..." @bind="searchTerm">
            <span class="input-group-btn">
                <button class="btn btn-default" @onclick='Search' type="button"><span class="fas fa-search"></span>Search ...</button>
                @*@if (filterOn)
                {
                <button type="button" class="btn btn-link" @onclick='ClearFilter'>Clear Filter</button>
                }*@
            </span>
        </div>
    </div>
</div>

<p>
    <button class="nav-item" @onclick="()=>Create(0)">New Customer</button>
</p>
<table>
    <tr>
        <th></th>
        <th>
            ID
        </th>
        <th>
            FullName
        </th>
        <th>
            MobileNumber
        </th>
        <th>
            Address1
        </th>
        <th>
            Address2
        </th>
        <th>
            Address3
        </th>
        <th>
            City
        </th>
        <th>
            State
        </th>
        <th>
            PinCode
        </th>
        <th>
            IndividualRole
        </th>
        @*         <th>
        ASPNetUserName
        </th>
        *@
    </tr>

    @foreach (var oItem in oModel)
    {
        <tr>
            <td>
                <button @onclick="()=>Create(oItem.Id)">Edit</button>
                <button @onclick="()=>Donations(oItem.Id)">D</button>
                <button @onclick="()=>Expenses(oItem.Id)">E</button>
            </td>
            <td>
                @oItem.Id
            </td>
            <td>

                @oItem.FullName
            </td>
            <td>

                @oItem.MobileNumber
            </td>
            <td>

                @oItem.Address1
            </td>
            <td>

                @oItem.Address2
            </td>
            <td>

                @oItem.Address3
            </td>
            <td>

                @oItem.City
            </td>
            <td>

                @oItem.State
            </td>
            <td>

                @oItem.PinCode
            </td>
            <td>
                @oItem.IndividualRole
            </td>
            @*             <td>
        @oItem.AspnetUserName.ToString()
        </td>
        *@
        </tr>
    }
</table>



@code
{
    [Parameter]
    public string ID { get; set; }
    List<HJNKoyil.Models.Individual> oModel;

    private bool sortDirection = false;
    private int sortIndex = 0;
    private string spinnerbgImage = "img/spinner.gif";
    private bool spinning = true;
    private string searchTerm = "";
    private bool filterOn = false;
    private int filteredRecordCount = 0;
    private string searchMessage = "";


    private void Create(int vId)
    {
        //put your code here
        //NavManager.NavigateTo("/.../Create/" + pid.ToString() + "/" + vId.ToString());
        oNavManager.NavigateTo("/CreateIndividual/" + vId.ToString());
    }

    private void Donations(int vId)
    {
        //put your code here
        //NavManager.NavigateTo("/.../Create/" + pid.ToString() + "/" + vId.ToString());
        oNavManager.NavigateTo("/vwdonationlist/" + vId.ToString());
    }

    private void Expenses(int vId)
    {
        //put your code here
        //NavManager.NavigateTo("/.../Create/" + pid.ToString() + "/" + vId.ToString());
        oNavManager.NavigateTo("/vwexpenselist/" + vId.ToString());
    }

    protected override async Task OnInitializedAsync()
    {
        oModel = new List<Models.Individual>();
        //oModel = svcIndividual.List().ToList();
    }

    protected async Task Search()
    {
        if (searchTerm.Length == 0)
        {
            //set search var
            filterOn = false;
            filteredRecordCount = 0;
            searchMessage = "";
        }
        else
        {
            try
            {
                oModel = svcIndividual.List(searchTerm, 1, 20).ToList();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Catching Error\n");
                Console.Write(ex.InnerException);
                Console.Write(ex.Source);
                Console.WriteLine(ex.Message);
            }
        }
    }

}
